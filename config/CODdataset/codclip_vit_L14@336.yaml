DATA:
  train_root: dataset/TrainDataset/
  test_root: dataset/TestDataset/
  val_root: dataset/TestDataset/CAMO/
  dataset: CODtraindataset
  model_save_path: pretrain/
  save_map: True
  map_save_path: exp/
  exp_name: blank_with_nofix
  test_dataset: ['CHAMELEON', 'CAMO', 'COD10K', 'NC4K']

TRAIN:
  # Base Arch
  clip_pretrain: pretrain/ViT-L-14-336px.pt
  input_size: 336
  word_len: 77
  word_dim: 768
  feats_layer_num: [7, 15, 23]
  vis_dim: 768
  fpn_in: [768, 768, 768]  # defined by Vit
  fpn_out: [384, 768, 1024]
  sync_bn: True
  # Decoder
  num_layers: 3
  num_head: 8
  dim_ffn: 2048
  dropout: 0.1
  intermediate: False
  # Training Setting
  workers: 32  # data loader workers
  workers_val: 16
  epochs: 100
  milestones: [35, 75]
  start_epoch: 0
  batch_size: 12  # batch size for training
  batch_size_val: 1  # batch size for validation during training, memory and speed tradeoff
  base_lr: 0.0001
  lr_decay: 0.2
  lr_multi: 0.1
  weight_decay: 0.
  max_norm: 0.
  manual_seed: 0
  print_freq: 100
  # Resume & Save
  save_freq: 1
  weight:  # path to initial weight (default: none)
  resume:  # path to latest checkpoint (default: none)
  evaluate: True  # evaluate on validation set, extra gpu memory needed and small batch_size_val is recommend
  clean_cache: False  # clean cache after each epoch

Distributed:
  dist_url: tcp://localhost:3681
  dist_backend: 'nccl'
  multiprocessing_distributed: True
  world_size: 1
  rank: 0

TEST:
  test_split: val-test
  visualize: False
